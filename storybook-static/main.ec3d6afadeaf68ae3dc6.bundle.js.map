{"version":3,"file":"main.ec3d6afadeaf68ae3dc6.bundle.js","sources":["webpack:///./src/pages/PVerificationDetailPage.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { Flex } from \"@rebass/emotion\";\nimport React from \"react\";\nimport { DataContext } from \"tuteria-shared/lib/shared/DataContext\";\nimport { Button } from \"tuteria-shared/lib/shared/primitives\";\nimport { DetailHeader, DetailItem, ListGroup } from \"./reusables\";\nimport Modal from \"tuteria-shared/lib/shared/primitives/Modal\";\nimport { Input } from \"tuteria-shared/lib/shared/LoginPage\";\nimport { getDate } from \"tuteria-shared/lib/shared/reusables\";\n\nexport const Select = ({ options, label, value, onChange }) => {\n  return (\n    <Flex py={3} flexDirection=\"column\">\n      {label && (\n        <label\n          css={css`\n            font-weight: bold;\n            padding-bottom: 8px;\n          `}\n        >\n          {label}\n        </label>\n      )}\n      <select\n        css={css`\n          height: 36px;\n          align-self: flex-end;\n          margin-bottom: 16px;\n          width: 100%;\n        `}\n        value={value}\n        onChange={onChange}\n      >\n        {options.map(option => (\n          <option key={option.label} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </Flex>\n  );\n};\nexport class PVerificationDetailPage extends React.Component {\n  state = {\n    data: {},\n    payment_detail: {},\n    showModal: false,\n    verified_transactions: []\n  };\n  static contextType = DataContext;\n\n  componentDidMount() {\n    let { match } = this.props;\n    let { dispatch, actions } = this.context;\n    let order = match.params.order;\n    dispatch({\n      type: actions.TRANSACTION_DETAIL,\n      value: order\n    }).then(data => {\n      this.setState({\n        data: data[0],\n        verified_transactions: data[1],\n        payment_detail: this.getPaymentMethod(order, data[1])\n      });\n    });\n  }\n  getPaymentMethod = (order, verified_transactions) => {\n    let records = [].concat(...Object.values(verified_transactions));\n    return records.find(x => x.order === order) || {};\n  };\n  updatePaymentDetail = field => {\n    return e => {\n      this.setState({\n        payment_detail: {\n          ...this.state.payment_detail,\n          [field]: e.target.value\n        }\n      });\n    };\n  };\n  updateVerification = () => {\n    let { payment_detail } = this.state;\n    let { dispatch, actions } = this.context;\n\n    return dispatch({\n      type: actions.UPDATE_VERIFICATION,\n      value: payment_detail\n    }).then(() => {\n      this.setState({ showModal: false });\n      this.props.history.goBack();\n    });\n  };\n  render() {\n    let { data, payment_detail, showModal } = this.state;\n    return Object.keys(data).length > 0 ? (\n      <Flex flexDirection=\"column\">\n        <Modal\n          action={() => {\n            let result = window.confirm(\n              \"Are you sure you want to approve this payment\"\n            );\n            if (result) {\n              this.setState(\n                {\n                  payment_detail:\n                    Object.keys(payment_detail).length > 0\n                      ? {\n                          amount: data.amount,\n                          order: data.order,\n                          ...payment_detail\n                        }\n                      : {\n                          method: \"\",\n                          amount: data.amount,\n                          order: data.order\n                        }\n                },\n                () => {\n                  if (this.state.payment_detail.method) {\n                    this.updateVerification();\n                  }\n                }\n              );\n            } else {\n            }\n          }}\n          handleCloseModal={() => {\n            this.setState({\n              showModal: false,\n              payment_detail: this.getPaymentMethod(\n                data.order,\n                this.state.verified_transactions\n              )\n            });\n          }}\n          showModal={showModal}\n          heading={`Update Payment Information for ${\n            data.name\n          } lesson booked on ${getDate(data.date)}`}\n        >\n          <Flex justifyContent=\"space-between\">\n            <Select\n              label=\"Payment Method\"\n              value={payment_detail.method}\n              options={[\n                { label: \"Select Payment Method\", value: \"\" },\n                { label: \"Paystack\", value: \"Paystack\" },\n                { label: \"UBA Bank\", value: \"UBA Bank\" },\n                { label: \"GT Bank\", value: \"GT Bank\" },\n                { label: \"Zenith Bank\", value: \"Zenith Bank\" }\n              ]}\n              onChange={this.updatePaymentDetail(\"method\")}\n            />\n            <Input\n              type=\"number\"\n              label=\"Amount Paid\"\n              value={parseFloat(payment_detail.amount || data.amount)}\n              onChange={this.updatePaymentDetail(\"amount\")}\n            />\n          </Flex>\n        </Modal>\n        <DetailHeader\n          heading={`N${data.amount.toLocaleString()}`}\n          subHeading={`from ${data.name}`}\n        >\n          <Button onClick={() => this.setState({ showModal: true })}>\n            {payment_detail.method ? \"Update Payment\" : \"Confirm Payment\"}\n          </Button>\n        </DetailHeader>\n        <Flex mb={4} flexDirection=\"column\">\n          <ListGroup name=\"Other Information\" />\n          <DetailItem label=\"Email\">{data.email}</DetailItem>\n          <DetailItem label=\"order\">{data.order}</DetailItem>\n          <DetailItem label=\"Date booked\">{getDate(data.date)}</DetailItem>\n          {Object.keys(payment_detail).length > 0 && (\n            <>\n              <ListGroup name=\"Confirmed Payment Information\" />\n              <DetailItem label=\"Payment Mode\">\n                {payment_detail.method}\n              </DetailItem>\n              <DetailItem label=\"Amount\">{payment_detail.amount}</DetailItem>\n            </>\n          )}\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\nexport default PVerificationDetailPage;\n"],"mappings":"AAWA","sourceRoot":""}